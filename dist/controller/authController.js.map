{"version":3,"sources":["../../src/controller/authController.js"],"names":["authController","login","req","res","next","credential","body","usersModel","findOne","email","password","err","user","json","token","jwt","sign","first_name","last_name","env","App_key","register","save"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,iBAAiB;AACnBC,WAAO,eAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvB,YAAMC,aAAaH,IAAII,IAAvB;AACAC,6BAAWC,OAAX,CAAmB,EAACC,OAAOJ,WAAWI,KAAnB,EAA0BC,UAAUL,WAAWK,QAA/C,EAAnB,EAA6E,UAACC,GAAD,EAAMC,IAAN,EAAe;AACxF,gBAAID,GAAJ,EAASR,IAAIU,IAAJ,CAASF,GAAT;AACT,gBAAIC,SAAS,IAAb,EAAmB;AACf,oBAAME,QAAQC,uBAAIC,IAAJ,CAAS;AACnBP,2BAAOG,KAAKH,KADO;AAEnBQ,gCAAYL,KAAKK,UAFE;AAGnBC,+BAAWN,KAAKM;AAHG,iBAAT,EAIXC,cAAIC,OAJO,CAAd;AAKAjB,oBAAIU,IAAJ,CAAS,EAACC,YAAD,EAAT;AACH,aAPD,MAOO;AACHX,oBAAIU,IAAJ,CAAS,8BAAT;AACH;AACJ,SAZD;AAaH,KAhBkB;;AAkBnBQ,cAAU,kBAACnB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,YAAIQ,OAAO,IAAIL,oBAAJ,CAAeL,IAAII,IAAnB,CAAX;AACAM,aAAKU,IAAL,CAAUpB,IAAII,IAAd,EAAoB,UAAUK,GAAV,EAAeC,IAAf,EAAqB;AACrC,gBAAID,GAAJ,EAAS,OAAOR,IAAIU,IAAJ,CAASF,GAAT,CAAP;AACTR,gBAAIU,IAAJ,CAASD,IAAT;AACH,SAHD;AAIH;AAxBkB,CAAvB;;kBA2BeZ,c","file":"authController.js","sourcesContent":["import usersModel from './../models/usersModel';\nimport jwt from 'jsonwebtoken';\nimport env from \"../env\";\n\nconst authController = {\n    login: (req, res, next) => {\n        const credential = req.body;\n        usersModel.findOne({email: credential.email, password: credential.password}, (err, user) => {\n            if (err) res.json(err);\n            if (user !== null) {\n                const token = jwt.sign({\n                    email: user.email,\n                    first_name: user.first_name,\n                    last_name: user.last_name\n                }, env.App_key);\n                res.json({token})\n            } else {\n                res.json(\"email or password incorrect!\")\n            }\n        });\n    },\n\n    register: (req, res, next) => {\n        let user = new usersModel(req.body);\n        user.save(req.body, function (err, user) {\n            if (err) return res.json(err);\n            res.json(user)\n        })\n    },\n};\n\nexport default authController;"]}