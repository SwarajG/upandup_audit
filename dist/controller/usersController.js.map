{"version":3,"sources":["../../src/controller/usersController.js"],"names":["usersController","getAll","req","res","next","usersModel","find","err","users","json","getOne","findById","params","id","user","create","body","update","findOneAndUpdate","new","delete","remove","_id","ok"],"mappings":";;;;;;AAAA;;;;;;;;AAEA,IAAMA,kBAAkB;;AAEpBC;AAAA,2EAAQ,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AACJC,iDAAWC,IAAX,CAAgB,EAAhB,EAAoB,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAChC,oCAAID,GAAJ,EAAS,OAAOJ,IAAIM,IAAJ,CAASF,GAAT,CAAP;AACTJ,oCAAIM,IAAJ,CAASD,KAAT;AACH,6BAHD;;AADI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAR;;AAAA;AAAA;AAAA;AAAA,OAFoB;;AASpBE,YAAQ,gBAACR,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBC,6BAAWM,QAAX,CAAoBT,IAAIU,MAAJ,CAAWC,EAA/B,EAAmC,UAACN,GAAD,EAAMO,IAAN,EAAe;AAC9CX,gBAAIM,IAAJ,CAASK,QAAQ,EAAjB;AACH,SAFD;AAGH,KAbmB;;AAepBC,YAAQ,gBAACb,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBC,6BAAWU,MAAX,CAAkBb,IAAIc,IAAtB,EAA4B,UAAUT,GAAV,EAAeO,IAAf,EAAqB;AAC7C,gBAAIP,GAAJ,EAAS,OAAOJ,IAAIM,IAAJ,CAASF,GAAT,CAAP;AACTJ,gBAAIM,IAAJ,CAASK,IAAT;AACH,SAHD;AAIH,KApBmB;;AAsBpBG,YAAQ,gBAACf,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBC,6BAAWa,gBAAX,CAA4BhB,IAAIU,MAAJ,CAAWC,EAAvC,EAA2CX,IAAIc,IAA/C,EAAqD,EAACG,KAAK,IAAN,EAArD,EAAkE,UAACZ,GAAD,EAAMO,IAAN,EAAe;AAC7E,gBAAIP,GAAJ,EAAS,OAAOJ,IAAIM,IAAJ,CAASF,GAAT,CAAP;AACTJ,gBAAIM,IAAJ,CAASK,IAAT;AACH,SAHD;AAIH,KA3BmB;;AA6BpBM,YAAQ,iBAAClB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBC,6BAAWgB,MAAX,CAAkB,EAACC,KAAKpB,IAAIU,MAAJ,CAAWC,EAAjB,EAAlB,EAAwC,UAACN,GAAD,EAAMgB,EAAN,EAAa;AACjD,gBAAIhB,GAAJ,EAAS,OAAOJ,IAAIM,IAAJ,CAASF,GAAT,CAAP;AACZ,SAFD;AAGAJ,YAAIM,IAAJ,CAAS,IAAT;AACH;AAlCmB,CAAxB;;kBAqCeT,e","file":"usersController.js","sourcesContent":["import usersModel from '../models/usersModel'\n\nconst usersController = {\n\n    getAll: async (req, res, next) => {\n        usersModel.find({}, (err, users) => {\n            if (err) return res.json(err);\n            res.json(users);\n        });\n    },\n\n    getOne: (req, res, next) => {\n        usersModel.findById(req.params.id, (err, user) => {\n            res.json(user || {});\n        });\n    },\n\n    create: (req, res, next) => {\n        usersModel.create(req.body, function (err, user) {\n            if (err) return res.json(err);\n            res.json(user)\n        })\n    },\n\n    update: (req, res, next) => {\n        usersModel.findOneAndUpdate(req.params.id, req.body, {new: true}, (err, user) => {\n            if (err) return res.json(err);\n            res.json(user)\n        });\n    },\n\n    delete: (req, res, next) => {\n        usersModel.remove({_id: req.params.id}, (err, ok) => {\n            if (err) return res.json(err);\n        });\n        res.json(true)\n    }\n};\n\nexport default usersController;"]}